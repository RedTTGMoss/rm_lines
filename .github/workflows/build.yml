# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Release and publish to pypi

on:
  push:
    tags: [ "*" ]
    branches-ignore: [ "main" ]
  pull_request:
    branches: [ "main", "experimental" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Fetch tags for current commit
        run: git fetch --tags --depth=1

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Update version
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            # Check if there is a tag on the current commit
            tag=$(git tag --points-at HEAD | head -n 1)
            if [[ -n "$tag" ]]; then
              echo "Tag found: $tag"
              version="${tag}"
            else
              echo "Failed to get tag, using dev"
              version="0.0.0.dev"
            fi
          else
            echo "Not on tagged commit, using dev"
            version="0.0.0.dev"
          fi
          echo "Version: $version"
          echo "version=${version}" >> "$GITHUB_ENV"
          sed -i -e "s|0.0.0+replaced-by-ci|${version}|g" pyproject.toml

      - name: Build with poetry
        shell: bash
        run: |
          poetry build -f wheel

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Wheel
          path: |
            dist/*.whl
          retention-days: 5

  create-draft-release:
    name: Create Draft Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: rMLines python release ${{ github.ref_name }}
          draft: true
          files: artifacts/**/*

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/rm_lines
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - name: Move wheels to dist
        shell: bash
        run: |
          mkdir -p dist
          find artifacts -type f -name "*.whl" -exec mv {} dist/ \;
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
